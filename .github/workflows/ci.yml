name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Docker Compose up
        run: |
          cd docker
          docker-compose up -d

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker-compose exec -T db pg_isready; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Run SQL setup
        run: |
          docker-compose exec -T db psql -U postgres -f db_scripts/user.sql

      - name: Run tests
        run: npm test -- --detectOpenHandles

      - name: Shutdown Docker Compose
        run: |
          cd docker
          docker-compose down
